<Activity mc:Ignorable="sap sap2010" x:Class="Main" mva:VisualBasic.Settings="{x:Null}" sap:VirtualizedContainerService.HintSize="624,700.666666666667" sap2010:WorkflowViewState.IdRef="ActivityBuilder_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="30">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>UiPath.Database</x:String>
      <x:String>UiPath.Database.Activities</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="21">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>UiPath.Database</AssemblyReference>
      <AssemblyReference>UiPath.Database.Activities</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Flowchart sap:VirtualizedContainerService.HintSize="634,636" sap2010:WorkflowViewState.IdRef="Flowchart_1">
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <av:Point x:Key="ShapeLocation">270,2.5</av:Point>
        <av:Size x:Key="ShapeSize">60,74.6666666666667</av:Size>
        <av:PointCollection x:Key="ConnectorLocation">300,77.1666666666667 300,135.333333333333</av:PointCollection>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Flowchart.StartNode>
      <x:Reference>__ReferenceID1</x:Reference>
    </Flowchart.StartNode>
    <FlowStep x:Name="__ReferenceID1">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">200,135.333333333333</av:Point>
          <av:Size x:Key="ShapeSize">200,69.3333333333333</av:Size>
          <av:PointCollection x:Key="ConnectorLocation">300,204.666666666667 300,273.666666666667</av:PointCollection>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Sequence sap:VirtualizedContainerService.HintSize="376,1384" sap2010:WorkflowViewState.IdRef="Sequence_1">
        <Sequence.Variables>
          <Variable x:TypeArguments="ui:DatabaseConnection" Name="outdb" />
          <Variable x:TypeArguments="sd:DataTable" Name="outdatatable" />
          <Variable x:TypeArguments="sd:DataTable" Name="invaliddt" />
          <Variable x:TypeArguments="sd:DataTable" Name="discounteddt" />
          <Variable x:TypeArguments="sd:DataTable" Name="tarrifdt" />
          <Variable x:TypeArguments="sd:DataTable" Name="IP_Consultationsdt" />
          <Variable x:TypeArguments="sd:DataTable" Name="investigationdt" />
          <Variable x:TypeArguments="sd:DataTable" Name="labdt" />
          <Variable x:TypeArguments="sd:DataTable" Name="Proceduredt" />
          <Variable x:TypeArguments="sd:DataTable" Name="Surgeriesdt" />
        </Sequence.Variables>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <ui:DatabaseConnect DatabaseConnection="[outdb]" DisplayName="Connect" sap:VirtualizedContainerService.HintSize="334,58.6666666666667" sap2010:WorkflowViewState.IdRef="DatabaseConnect_1" ProviderName="System.Data.Odbc" ConnectionString="Dsn=beml_11;uid=root;pwd=sang1422" />
        <ui:ExecuteQuery ContinueOnError="{x:Null}" TimeoutMS="{x:Null}" CommandType="Text" DataTable="[outdatatable]" DisplayName="Execute Query" ExistingDbConnection="[outdb]" sap:VirtualizedContainerService.HintSize="334,87.3333333333333" sap2010:WorkflowViewState.IdRef="ExecuteQuery_1" Sql="select * from txn_inpatient_item_details">
          <ui:ExecuteQuery.Parameters>
            <scg:Dictionary x:TypeArguments="x:String, Argument" />
          </ui:ExecuteQuery.Parameters>
        </ui:ExecuteQuery>
        <ui:ReadRange AddHeaders="True" DataTable="[invaliddt]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="334,86.6666666666667" sap2010:WorkflowViewState.IdRef="ReadRange_1" SheetName="Invalid" WorkbookPath="C:\Users\dell\Documents\UiPath\Beml_Computationfor2ndset\validlist (1).xlsx">
          <ui:ReadRange.Range>
            <InArgument x:TypeArguments="x:String">
              <Literal x:TypeArguments="x:String" Value="" />
            </InArgument>
          </ui:ReadRange.Range>
        </ui:ReadRange>
        <ui:ReadRange AddHeaders="True" DataTable="[discounteddt]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="334,86.6666666666667" sap2010:WorkflowViewState.IdRef="ReadRange_2" SheetName="discounted" WorkbookPath="C:\Users\dell\Documents\UiPath\Beml_Computationfor2ndset\validlist (1).xlsx">
          <ui:ReadRange.Range>
            <InArgument x:TypeArguments="x:String">
              <Literal x:TypeArguments="x:String" Value="" />
            </InArgument>
          </ui:ReadRange.Range>
        </ui:ReadRange>
        <ui:ReadRange AddHeaders="True" DataTable="[tarrifdt]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="334,86.6666666666667" sap2010:WorkflowViewState.IdRef="ReadRange_3" SheetName="tarrif" WorkbookPath="C:\Users\dell\Documents\UiPath\Beml_Computationfor2ndset\validlist (1).xlsx">
          <ui:ReadRange.Range>
            <InArgument x:TypeArguments="x:String">
              <Literal x:TypeArguments="x:String" Value="" />
            </InArgument>
          </ui:ReadRange.Range>
        </ui:ReadRange>
        <ui:ReadRange AddHeaders="True" DataTable="[IP_Consultationsdt]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="334,86.6666666666667" sap2010:WorkflowViewState.IdRef="ReadRange_4" SheetName="IP Consultations" WorkbookPath="C:\Users\dell\Documents\UiPath\Beml_Computationfor2ndset\validlist (1).xlsx">
          <ui:ReadRange.Range>
            <InArgument x:TypeArguments="x:String">
              <Literal x:TypeArguments="x:String" Value="" />
            </InArgument>
          </ui:ReadRange.Range>
        </ui:ReadRange>
        <ui:ReadRange AddHeaders="True" DataTable="[investigationdt]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="334,86.6666666666667" sap2010:WorkflowViewState.IdRef="ReadRange_5" SheetName="investigation" WorkbookPath="C:\Users\dell\Documents\UiPath\Beml_Computationfor2ndset\validlist (1).xlsx">
          <ui:ReadRange.Range>
            <InArgument x:TypeArguments="x:String">
              <Literal x:TypeArguments="x:String" Value="" />
            </InArgument>
          </ui:ReadRange.Range>
        </ui:ReadRange>
        <ui:ReadRange AddHeaders="True" DataTable="[labdt]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="334,86.6666666666667" sap2010:WorkflowViewState.IdRef="ReadRange_6" SheetName="lab" WorkbookPath="C:\Users\dell\Documents\UiPath\Beml_Computationfor2ndset\validlist (1).xlsx">
          <ui:ReadRange.Range>
            <InArgument x:TypeArguments="x:String">
              <Literal x:TypeArguments="x:String" Value="" />
            </InArgument>
          </ui:ReadRange.Range>
        </ui:ReadRange>
        <ui:ReadRange AddHeaders="True" DataTable="[Proceduredt]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="334,86.6666666666667" sap2010:WorkflowViewState.IdRef="ReadRange_7" SheetName="Procedure" WorkbookPath="C:\Users\dell\Documents\UiPath\Beml_Computationfor2ndset\validlist (1).xlsx">
          <ui:ReadRange.Range>
            <InArgument x:TypeArguments="x:String">
              <Literal x:TypeArguments="x:String" Value="" />
            </InArgument>
          </ui:ReadRange.Range>
        </ui:ReadRange>
        <ui:ReadRange AddHeaders="True" DataTable="[Surgeriesdt]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="334,86.6666666666667" sap2010:WorkflowViewState.IdRef="ReadRange_8" SheetName="Surgeries" WorkbookPath="C:\Users\dell\Documents\UiPath\Beml_Computationfor2ndset\validlist (1).xlsx">
          <ui:ReadRange.Range>
            <InArgument x:TypeArguments="x:String">
              <Literal x:TypeArguments="x:String" Value="" />
            </InArgument>
          </ui:ReadRange.Range>
        </ui:ReadRange>
        <ui:ForEachRow CurrentIndex="{x:Null}" DataTable="[outdatatable]" DisplayName="For Each Row" sap:VirtualizedContainerService.HintSize="1041.33333333333,1701.33333333333" sap2010:WorkflowViewState.IdRef="ForEachRow_5">
          <ui:ForEachRow.Body>
            <ActivityAction x:TypeArguments="sd:DataRow">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="sd:DataRow" Name="drow" />
              </ActivityAction.Argument>
              <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="990.666666666667,1548.66666666667" sap2010:WorkflowViewState.IdRef="Sequence_8">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:ForEachRow CurrentIndex="{x:Null}" DataTable="[invaliddt]" DisplayName="For Each Row Invalid item" sap:VirtualizedContainerService.HintSize="576.666666666667,486" sap2010:WorkflowViewState.IdRef="ForEachRow_1">
                  <ui:ForEachRow.Body>
                    <ActivityAction x:TypeArguments="sd:DataRow">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="sd:DataRow" Name="erow" />
                      </ActivityAction.Argument>
                      <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="526,333.333333333333" sap2010:WorkflowViewState.IdRef="Sequence_2">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <If Condition="[drow.Item(&quot;PARTICULARS&quot;).ToString. ToLower.Contains(erow.Item(0).ToString.ToLower) Or drow.Item(&quot;PARTICULARS&quot;).ToString.ToLower.StartsWith(erow.Item(0).ToString.ToLower)]" sap:VirtualizedContainerService.HintSize="484,241.333333333333" sap2010:WorkflowViewState.IdRef="If_1">
                          <If.Then>
                            <ui:ExecuteNonQuery AffectedRecords="{x:Null}" ContinueOnError="{x:Null}" TimeoutMS="{x:Null}" CommandType="Text" DisplayName="Execute Non Query" ExistingDbConnection="[outdb]" sap:VirtualizedContainerService.HintSize="334,87.3333333333333" sap2010:WorkflowViewState.IdRef="ExecuteNonQuery_1" Sql="[&quot;UPDATE beml_1.txn_inpatient_item_details set SYST_VALID_FLG='Invalid' where (TXN_ID='&quot;+drow(0).ToString+&quot;');&quot;]">
                              <ui:ExecuteNonQuery.Parameters>
                                <scg:Dictionary x:TypeArguments="x:String, Argument" />
                              </ui:ExecuteNonQuery.Parameters>
                            </ui:ExecuteNonQuery>
                          </If.Then>
                        </If>
                      </Sequence>
                    </ActivityAction>
                  </ui:ForEachRow.Body>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:ForEachRow>
                <ui:ForEachRow CurrentIndex="{x:Null}" DataTable="[discounteddt]" DisplayName="For Each Row Discounted item" sap:VirtualizedContainerService.HintSize="948.666666666667,52.6666666666667" sap2010:WorkflowViewState.IdRef="ForEachRow_2">
                  <ui:ForEachRow.Body>
                    <ActivityAction x:TypeArguments="sd:DataRow">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="sd:DataRow" Name="disrow" />
                      </ActivityAction.Argument>
                      <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="526,333.333333333333" sap2010:WorkflowViewState.IdRef="Sequence_3">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <If Condition="[drow.Item(&quot;PARTICULARS&quot;).ToString.ToLower.Contains(disrow.Item(&quot;Discountable&quot;).ToString.ToLower.Trim) Or drow.Item(&quot;PARTICULARS&quot;).ToString.ToLower.StartsWith(disrow.Item(0).ToString.ToLower)]" sap:VirtualizedContainerService.HintSize="484,241.333333333333" sap2010:WorkflowViewState.IdRef="If_2">
                          <If.Then>
                            <ui:ExecuteQuery ContinueOnError="{x:Null}" DataTable="{x:Null}" TimeoutMS="{x:Null}" CommandType="Text" DisplayName="Execute Query" ExistingDbConnection="[outdb]" sap:VirtualizedContainerService.HintSize="334,87.3333333333333" sap2010:WorkflowViewState.IdRef="ExecuteQuery_2" Sql="[&quot;update txn_inpatient_item_details set SYST_DISC_STATUS='Yes' where TXN_ID='&quot;+drow.Item(&quot;TXN_ID&quot;).ToString+&quot;';&quot;]">
                              <ui:ExecuteQuery.Parameters>
                                <scg:Dictionary x:TypeArguments="x:String, Argument" />
                              </ui:ExecuteQuery.Parameters>
                            </ui:ExecuteQuery>
                          </If.Then>
                        </If>
                      </Sequence>
                    </ActivityAction>
                  </ui:ForEachRow.Body>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:ForEachRow>
                <ui:ForEachRow CurrentIndex="{x:Null}" DataTable="[tarrifdt]" DisplayName="For Each Row Tarrrif" sap:VirtualizedContainerService.HintSize="948.666666666667,52.6666666666667" sap2010:WorkflowViewState.IdRef="ForEachRow_3">
                  <ui:ForEachRow.Body>
                    <ActivityAction x:TypeArguments="sd:DataRow">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="sd:DataRow" Name="trafrow" />
                      </ActivityAction.Argument>
                      <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="526,333.333333333333" sap2010:WorkflowViewState.IdRef="Sequence_4">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <If Condition="[drow.Item(&quot;PARTICULARS&quot;).ToString.ToLower.Contains(trafrow.Item(&quot;Tarrif&quot;).ToString.ToLower) Or drow.Item(&quot;PARTICULARS&quot;).ToString.ToLower.StartsWith(trafrow.Item(&quot;Tarrif&quot;).ToString.ToLower)]" sap:VirtualizedContainerService.HintSize="484,241.333333333333" sap2010:WorkflowViewState.IdRef="If_3">
                          <If.Then>
                            <ui:ExecuteQuery ContinueOnError="{x:Null}" DataTable="{x:Null}" TimeoutMS="{x:Null}" CommandType="Text" DisplayName="Execute Query" ExistingDbConnection="[outdb]" sap:VirtualizedContainerService.HintSize="334,87.3333333333333" sap2010:WorkflowViewState.IdRef="ExecuteQuery_3" Sql="[&quot;update txn_inpatient_item_details set SYST_EXCLUDE='Exclude' where TXN_ID='&quot;+drow.Item(&quot;TXN_ID&quot;).ToString+&quot;';&quot;]">
                              <ui:ExecuteQuery.Parameters>
                                <scg:Dictionary x:TypeArguments="x:String, Argument" />
                              </ui:ExecuteQuery.Parameters>
                            </ui:ExecuteQuery>
                          </If.Then>
                        </If>
                      </Sequence>
                    </ActivityAction>
                  </ui:ForEachRow.Body>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:ForEachRow>
                <ui:ForEachRow CurrentIndex="{x:Null}" DataTable="[labdt]" DisplayName="For Each Row" sap:VirtualizedContainerService.HintSize="948.666666666667,1178.66666666667" sap2010:WorkflowViewState.IdRef="ForEachRow_4">
                  <ui:ForEachRow.Body>
                    <ActivityAction x:TypeArguments="sd:DataRow">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="sd:DataRow" Name="labrow" />
                      </ActivityAction.Argument>
                      <Sequence DisplayName="Body2" sap:VirtualizedContainerService.HintSize="898,1026" sap2010:WorkflowViewState.IdRef="Sequence_7">
                        <Sequence.Variables>
                          <Variable x:TypeArguments="x:String" Name="dbqtyprice" />
                        </Sequence.Variables>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <If Condition="[drow.Item(&quot;PARTICULARS&quot;).ToString.Trim.ToLower.Equals(labrow.Item(&quot;PARTICULARS&quot;).ToString.ToLower.Trim)]" sap:VirtualizedContainerService.HintSize="856,934" sap2010:WorkflowViewState.IdRef="If_6">
                          <If.Then>
                            <Sequence DisplayName="Private: Sequence" sap:VirtualizedContainerService.HintSize="710,780" sap2010:WorkflowViewState.IdRef="Sequence_6">
                              <Sequence.Variables>
                                <Variable x:TypeArguments="sd:DataTable" Name="itemDt" />
                              </Sequence.Variables>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <If Condition="[Not String.IsNullOrEmpty(drow.Item(&quot;PRICE&quot;).ToString) AND Not String.IsNullOrEmpty(labrow.Item(&quot;MMH-SEMI SPECIAL&quot;).ToString) And  Not String.IsNullOrEmpty(drow.Item(&quot;PARTICULARS&quot;).ToString)]" sap:VirtualizedContainerService.HintSize="668,688" sap2010:WorkflowViewState.IdRef="If_5">
                                <If.Then>
                                  <If Condition="[Cint(drow(&quot;PRICE&quot;))*CINT(drow(&quot;QTY&quot;)) &gt; CINT(labrow(&quot;MMH-SEMI SPECIAL&quot;))]" sap:VirtualizedContainerService.HintSize="522,534" sap2010:WorkflowViewState.IdRef="If_4">
                                    <If.Then>
                                      <Sequence DisplayName="Sequence2" sap:VirtualizedContainerService.HintSize="376,380" sap2010:WorkflowViewState.IdRef="Sequence_5">
                                        <Sequence.Variables>
                                          <Variable x:TypeArguments="x:Int32" Default="0" Name="cap_diff" />
                                        </Sequence.Variables>
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <Assign sap:VirtualizedContainerService.HintSize="334,62" sap2010:WorkflowViewState.IdRef="Assign_1">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:Int32">[cap_diff]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:Int32">[cint(drow.Item("QTY").ToString) *cint(drow.Item("PRICE").ToString) - cint(labrow.Item("MMH-SEMI SPECIAL").ToString)]</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                        <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="334,58.6666666666667" sap2010:WorkflowViewState.IdRef="MessageBox_1" Text="[cap_diff.ToString+&quot; &quot;+drow.Item(&quot;PARTICULARS&quot;).ToString]" />
                                        <ui:ExecuteQuery ContinueOnError="{x:Null}" DataTable="{x:Null}" TimeoutMS="{x:Null}" CommandType="Text" DisplayName="Execute Query" ExistingDbConnection="[outdb]" sap:VirtualizedContainerService.HintSize="334,87.3333333333333" sap2010:WorkflowViewState.IdRef="ExecuteQuery_4" Sql="[&quot;update txn_inpatient_item_details set SYST_CAP_DIFF=&quot;+cap_diff.ToString+&quot; where TXN_ID='&quot;+drow.Item(&quot;TXN_ID&quot;).ToString+&quot;';&quot;]">
                                          <ui:ExecuteQuery.Parameters>
                                            <scg:Dictionary x:TypeArguments="x:String, Argument" />
                                          </ui:ExecuteQuery.Parameters>
                                        </ui:ExecuteQuery>
                                      </Sequence>
                                    </If.Then>
                                  </If>
                                </If.Then>
                              </If>
                            </Sequence>
                          </If.Then>
                        </If>
                      </Sequence>
                    </ActivityAction>
                  </ui:ForEachRow.Body>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:ForEachRow>
              </Sequence>
            </ActivityAction>
          </ui:ForEachRow.Body>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:ForEachRow>
      </Sequence>
      <FlowStep.Next>
        <FlowStep x:Name="__ReferenceID0">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <av:Point x:Key="ShapeLocation">200,273.666666666667</av:Point>
              <av:Size x:Key="ShapeSize">200,52.6666666666667</av:Size>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Workflow File" sap:VirtualizedContainerService.HintSize="200,52.6666666666667" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="computation.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <scg:Dictionary x:TypeArguments="x:String, Argument" />
            </ui:InvokeWorkflowFile.Arguments>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:InvokeWorkflowFile>
        </FlowStep>
      </FlowStep.Next>
    </FlowStep>
    <x:Reference>__ReferenceID0</x:Reference>
  </Flowchart>
</Activity>